{"version":3,"sources":["constants/css.ts","components/Dropdown/index.tsx","components/VideoItem/index.tsx","app/Homepage/index.tsx","app/Contactpage/index.tsx","components/Loader/index.tsx","app/index.tsx","services/restService.ts","App.js","reportWebVitals.js","index.js"],"names":["css","body_background","color_card_background","color_panel_background","color_button_text","color_headings","color_labels","color_text","color_input_background","color_button","DropdownContainer","styled","div","LeftArrow","DropdownList","DropdownItemSelected","DropdownListItem","Dropdown","props","React","useState","toggle","setToggle","list","options","length","selectedItem","setSelectedItem","onClickOutsideListener","document","removeEventListener","onMouseLeave","addEventListener","className","onClick","style","maxWidth","overflow","height","text","placeholder","xmlns","width","fill","viewBox","d","map","item","index","onItemSelect","VideoItem","dateItem","Date","first_release_date","dateString","getDay","getMonth","getFullYear","rating","Math","round","name","fontSize","marginTop","summary","sortTypes","Homepage","useContext","VideoContext","videos","filterName","setFilterName","minimumScore","setMinimumScore","sortType","setSortType","htmlFor","type","value","onChange","e","target","val","replace","id","label","sort","a","b","filter","toLowerCase","includes","parseFloat","ContactPage","rows","Loader","display","alignItems","justifyContent","flexDirection","position","top","left","right","bottom","color","zIndex","backgroundColor","createContext","routes","Navigation","currentPage","setCurrentPage","setVideos","loading","setLoading","addToast","useToasts","location","useLocation","useEffect","pathname","console","log","axios","method","url","headers","then","data","catch","err","autoDismiss","appearance","finally","Provider","exact","path","to","component","Contactpage","App","autoDismissTimeout","placement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2945575.chunk.js","sourcesContent":["const css = {\n    body_background:\"vertical linear gradient #081221 to #03080f\",\n    color_card_background:\"#0e1a2b\",\n    color_panel_background:\"#0e1a2b\",\n    color_button_text:\"#ffffff\",\n    color_headings:\"#ffffff\",\n    color_labels:\"#ffffff\",\n    color_text:\"#c1d1e8\",\n    color_input_background:\"#182c47\",\n    color_button:\"#5692e8\"\n};\n\nexport default css","import React from \"react\"\nimport styled from 'styled-components'\nimport css from \"../../constants/css\"\n\n\nconst DropdownContainer = styled.div`\n  height: 3rem;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  cursor:pointer;\n  &:active{\n  background: transparent;\n  }\n \n`;\n\nconst LeftArrow = styled.div`\n  min-height: 2rem;\n  min-width: 2rem;\n  background-color: ${css.color_button};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n`;\n\nconst DropdownList = styled.div`\n  width: 100%;\n  height: 2.05rem;\n  background: ${css.color_input_background};\n  color: ${css.color_button_text};\n \n\n`;\n\nconst DropdownItemSelected = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 100%;\n    height: 100%;\n    background: ${css.color_input_background};\n    padding: 0 1rem;\n`;\n\nconst DropdownListItem = styled.div`\n  height: 2rem;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 1rem;\n  background: ${css.color_input_background};  \n  cursor:pointer;\n`;\n\n\ninterface DropdownProps {\n    options: Array<DropdownOptions>,\n    onItemSelect: (item:DropdownOptions) =>any,\n    placeholder?:string\n}\n\ninterface DropdownOptions {\n    id:number,\n    text:string,\n    label:string\n}\n\nconst Dropdown = (props:DropdownProps) => {\n\n    const [toggle, setToggle] = React.useState(false);\n\n    const list = props.options;\n    const [selectedItem, setSelectedItem] = React.useState(()=>{\n        return list.length > 0 ? list[0] : null\n    });\n\n    // document.addEventListener(\"click\", ()=>{\n    //     if(toggle){\n    //         setToggle(false)\n    //     }\n    // });\n\n    const onClickOutsideListener = () => {\n        if(toggle){\n            setToggle(!toggle)\n        }\n        document.removeEventListener(\"click\", onClickOutsideListener)\n    };\n\n\n\n    return (\n       <DropdownContainer  onMouseLeave={() => {\n           document.addEventListener(\"click\", onClickOutsideListener)\n       }}>\n           <LeftArrow>\n               <i className=\"fas fa-arrow-up\"/>\n           </LeftArrow>\n\n           <DropdownList>\n\n               <DropdownItemSelected  onClick={()=>{setToggle(!toggle)}}>\n                   <span\n                       style={{\n                           maxWidth:\"8rem\",\n                           overflow:\"hidden\",\n                           height:\"1.5rem\"\n                       }}\n                   >{selectedItem ? selectedItem.text : props.placeholder ? props.placeholder : \"Select\" }</span>\n                   <span>\n                       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                            className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n                           <path\n                               d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n                       </svg>\n                   </span>\n               </DropdownItemSelected>\n               {\n                  toggle && list.map((item, index)=>(\n                      <DropdownListItem key={`item-${index}`} onClick={()=>{\n                          if(item !== selectedItem){\n                              props.onItemSelect(item);\n                              setSelectedItem(item);\n                          }\n                          setToggle(!toggle)\n                      }}>\n                          {item.text}\n                      </DropdownListItem>\n                  ))\n               }\n           </DropdownList>\n\n       </DropdownContainer>\n    )\n\n};\n\nexport default Dropdown\n","import React from \"react\"\nimport \"./styles.css\"\nimport {VideoType} from \"../../constants/@types\";\n\n\nconst VideoItem = (props:VideoType) => {\n\n    const dateItem = new Date(props.first_release_date);\n    const dateString = `${dateItem.getDay()}/${dateItem.getMonth()}/${dateItem.getFullYear()}`\n\n\n    return(\n        <div className={\"video-item-wrapper card\"}>\n\n            <div className={\"video-container\"}>\n                <div className={\"video-number-mobile\"}>\n                    {props.rating && Math.round(props.rating)}\n                </div>\n\n            </div>\n\n            <div className={\"video-details-wrapper\"}>\n\n                <div className={\"video-details\"}>\n                    <h3 className={\"heading\"}>{props.name}</h3>\n                    <p className={\"text\"}>Release Date: {dateString}</p>\n                    <p className={\"text max-len-3\"} style={{ height:\"fit-content\", fontSize:14, marginTop:\"1rem\"}}>{props.summary}</p>\n                </div>\n\n                <div className={\"video-number-container\"}>\n\n                    <div className={\"video-number\"}>\n                        {props.rating && Math.round(props.rating)}\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\n\nexport default VideoItem","import React, {useState} from \"react\"\nimport \"./index.css\"\nimport Dropdown from \"../../components/Dropdown\"\nimport VideoItem from \"../../components/VideoItem\"\nimport {VideoContext} from \"../index\";\nimport {VideoType} from \"../../constants/@types\";\n\nconst sortTypes = {\n    DATE:\"DATE\",\n    SCORE:\"SCORE\",\n    NAME:\"NAME\"\n};\n\nconst Homepage = () => {\n\n    // @ts-ignore\n    const [videos] = React.useContext(VideoContext);\n    const [filterName, setFilterName] = useState(\"\");\n    const [minimumScore, setMinimumScore] = useState<string>(\"0\");\n    const [sortType, setSortType] = useState<string>(sortTypes.DATE);\n\n\n    const reset = () => {\n        setFilterName(\"\");\n        setSortType(sortTypes.DATE);\n        setMinimumScore(\"0\")\n    };\n\n    // const numberFilter =(string:string) => string.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '');\n\n\n\n    return (\n        <div className={\"home-page-container\"}>\n            <div className=\"filter-wrapper card\">\n                <div className=\"filter-item-container\">\n                    <h3>Filter Results</h3>\n\n                    <div className={\"filter-param-wrapper\"}>\n                        <div className={\"input-wrapper\"}>\n                            <label htmlFor=\"\">Name(contains)</label>\n                            <input type=\"text\" value={filterName} onChange={(e)=>{setFilterName(e.target.value)}} className={\"text-input\"}/>\n                        </div>\n\n                        <div className={\"tab-control-container\"}>\n                            <div  className={\"input-wrapper\"}>\n                                <label htmlFor=\"\">Minimum score</label>\n                                <input type=\"text\" value={minimumScore}  onChange={(e)=>{\n                                    const val = e.target.value.replace(/[^0-9.]/g, '');\n                                    setMinimumScore(val)}}  className={\"text-input\"}/>\n                            </div>\n\n                            <div  className={\"input-wrapper\"}>\n                                <label htmlFor=\"\">Order By</label>\n                                <Dropdown  options={[\n                                    {\n                                        id:1,\n                                        text:\"Release Date\",\n                                        label:sortTypes.DATE\n\n                                    },\n                                    {\n                                        id:2,\n                                        text:\"Score\",\n                                        label:sortTypes.SCORE\n\n                                    },\n                                    {\n                                        id:3,\n                                        text:\"Name\",\n                                        label:sortTypes.NAME\n\n                                    }\n                                ]} onItemSelect={(item) => {\n                                    setSortType(item.label)\n                                } }/>\n                            </div>\n\n\n                            <div className={\"clear-button-container\"}>\n                                <button className={\"button-clear\"} onClick={reset}>Clear</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div className=\"videos-wrapper\">\n\n                {\n                    videos\n                        .sort((a:VideoType, b:VideoType) => {\n                            switch (sortType) {\n                                case sortTypes.DATE:\n                                    return a.first_release_date - b.first_release_date;\n\n                                case sortTypes.SCORE:\n                                    return a.rating - b.rating;\n\n                                case sortTypes.NAME:\n                                    if(a.name < b.name) { return -1; }\n                                    if(a.name > b.name) { return 1; }\n                                    return 0;\n\n\n                                default:\n                                    return a.first_release_date - b.first_release_date\n                            }\n                        })\n                        .filter((item:VideoType)=>{ return item.name && item.name.toLowerCase().includes(filterName.toLowerCase())})\n                        .filter((item:VideoType) =>  {\n                            if(minimumScore.length > 0){\n                                return item.rating > parseFloat(minimumScore)\n                            }else\n                                return item.rating > 0\n                        })\n                        .map((item:VideoType, id:number)=>(\n                            <VideoItem key={`video-${id}`} {...item}/>\n                        ))\n                }\n\n                <div>\n                    {videos.length === 0 && <p>No videos available</p>}\n                </div>\n\n            </div>\n        </div>\n    )\n\n};\n\n\nexport default Homepage","import React from \"react\";\nimport \"./index.css\";\n\nconst ContactPage = () => {\n    return (\n        <div className=\"root\">\n            <div className=\"wrapper\">\n                <h2 className=\"title\">get in touch</h2>\n                <p className=\"information\">Trysail transom furi Sea Legs scallywag Jack Ketch chandler mizzenmast reef\n                    sails\n                    skysail. Shiver me timers loot bucko belaying pin Sea Legs boom gunwalls booty jury mast fore.</p>\n                <form className=\"form\">\n                    <h3 className=\"form-title\">Contact Form</h3>\n                    <div className=\"name-email-container\">\n                        <div className=\"name-container\">\n                            <label className=\"label\">Name <span className=\"required\">*</span></label>\n                            <input className=\"text-input display-block\" type=\"text\"/>\n                        </div>\n                        <div className=\"email-container\">\n                            <label className=\"label\">Email Address <span className=\"required\">*</span></label>\n                            <input className=\"text-input display-block\" type=\"email\"/>\n                        </div>\n                    </div>\n                    <div className=\"message-container\">\n                        <label className=\"label\">Message <span className=\"required\">*</span></label>\n                        <textarea rows={4} className=\"message-text-area display-block\"/>\n                    </div>\n                    <div className=\"button-container\">\n                        <button className=\"send-button\">Send</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n};\n\n\nexport default ContactPage\n","import React from \"react\"\n\n\nconst Loader = () => {\n\n    return(\n        <div style={{\n            height:\"100vh\",\n            width:\"100vw\",\n            display:\"flex\",\n            alignItems:\"center\",\n            justifyContent:\"center\",\n            flexDirection:\"column\",\n            position:\"absolute\",\n            top:0,\n            left:0,\n            right:0,\n            bottom:0,\n            color:\"white\",\n            zIndex:9999,\n            backgroundColor:\"rgba(0,0,0,0.72)\"\n        }}>\n            <div className=\"spinner-border\"/>\n            <div>\n                Loading...\n            </div>\n\n        </div>\n    )\n};\n\nexport default Loader","import React, {useState} from \"react\"\nimport {Switch, Route, NavLink, useLocation, Redirect} from \"react-router-dom\";\nimport \"./index.css\"\nimport Homepage from \"./Homepage\"\nimport Contactpage from \"./Contactpage\"\nimport css from \"../constants/css\"\nimport {fetchVideos} from \"../services/restService\";\nimport {VideoType} from \"../constants/@types\";\nimport Loader from \"../components/Loader\"\nimport {useToasts} from \"react-toast-notifications\"\n\nexport const VideoContext = React.createContext({});\n\n\nconst routes = {\n    videos:\"/videos\",\n    contacts:\"/contacts\"\n};\n\nconst Navigation = () => {\n\n    const [currentPage, setCurrentPage] = React.useState<string>(routes.videos);\n    const [videos, setVideos] = React.useState<Array<VideoType>>([]);\n    const [loading, setLoading] = useState(true);\n\n    const {addToast} = useToasts();\n\n\n\n    const location = useLocation();\n    React.useEffect(()=>{\n        const {pathname} = location;\n        console.log(pathname);\n        setCurrentPage(pathname)\n\n    }, [location]);\n\n    React.useEffect(()=>{\n        fetchVideos().then(({data}:any) =>{\n            setVideos(data)\n        }).catch(err => {\n            console.log(err);\n            addToast(\"Error fetching videos, please try again...\",{\n                autoDismiss:true,\n                appearance:\"error\"\n            })\n        })\n            .finally(()=>{\n            setLoading(false)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n\n    return (\n        <VideoContext.Provider value={[videos]}>\n            <Route exact path=\"/\">\n                <Redirect to=\"/videos\" />\n            </Route>\n\n            {\n                loading && <Loader/>\n            }\n            <div className={\"page\"}>\n                <div className={\"nav-container\"}>\n                    <div className={\"nav-bg-indicators\"}>\n                        <div className={\"nav-item-container\"}>\n                            <h1 style={{\n                                color:currentPage === routes.videos ? css.color_card_background :\"transparent\",\n                            }}>VIDEO</h1>\n                            <NavLink  className={\"nav-item\"} to={routes.videos}>VIDEOS GAMES</NavLink>\n                        </div>\n\n                        <div className={\"nav-item-container\"}>\n                            <h1 style={{\n                                color:currentPage === routes.contacts ? css.color_card_background :\"transparent\",\n                            }}>CONTACT</h1>\n                            <NavLink  className={\"nav-item\"} to={routes.contacts}>CONTACTS</NavLink>\n                        </div>\n                    </div>\n                </div>\n                <div style={{marginTop:\"4rem\"}}>\n                    <Switch>\n                        <Route path={routes.videos} component={Homepage} key={\"videos\"}/>\n                        <Route path={routes.contacts} exact component={Contactpage} key={\"contact\"}/>\n                    </Switch>\n                </div>\n            </div>\n        </VideoContext.Provider>\n    )\n};\n\nexport default Navigation","import axios from \"axios\"\n\nexport const fetchVideos = () => {\n    return axios({\n        method:\"GET\",\n        url:\"https://public.connectnow.org.uk/applicant-test/\",\n        headers:{\n            \"Access-Control-Allow-Origin\":\"*\"\n        }\n    })\n};","import React from \"react\";\nimport './App.css';\nimport Navigation from \"../src/app\"\nimport { ToastProvider } from 'react-toast-notifications';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n\nfunction App() {\n    return (\n        <BrowserRouter >\n        <ToastProvider\n            autoDismiss\n            autoDismissTimeout={6000}\n            placement=\"top-center\"\n        >\n            <div className={\"App\"}>\n                <Navigation/>\n            </div>\n        </ToastProvider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}